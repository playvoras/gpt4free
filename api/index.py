from flask import Flask, request, jsonify
from g4f.client import Client
import time

app = Flask(__name__)
client = Client()

@app.route('/api', methods=['POST'])
def fix_script():
    # Extract the script from the POST request
    data = request.get_json(force=True)

    if not data or 'script' not in data or not data['script']:
        # Return empty output if no script is provided
        return jsonify({'fixed_script': ''})

    script_content = data['script']

    # Start timing the request
    start_time = time.time()

    # Prepare the request to the g4f API with forced prompt
    response = client.chat.completions.create(
        model="gpt-4o",
        messages=[
            {"role": "system", "content": "You are an expert in fixing decompiled Luau scripts."},
            {"role": "user", "content": (
                "Here is the decompiled Luau script:\n\n"
                f"{script_content}\n\n"
                "Your task is to:\n"
                "1. Do not rename any variables.\n"
                "2. Make the code as short as possible.\n"
                "3. Fix any errors in the code.\n"
                "4. Do not say anything, just return the fixed script without adding any comments or extra text.\n"
                "5. Do not make the code 1 liner."
            )}
        ]
    )

    # Calculate the time taken
    end_time = time.time()
    elapsed_time = end_time - start_time

    # Extract and format the response
    fixed_script = response.choices[0].message.content.strip()
    formatted_script = (
        f"-- Generated by TestDecompiler\n"
        f"-- Took: {elapsed_time:.2f} Seconds\n"
        f"{fixed_script}"
    )

    # Return the formatted script
    return jsonify({'fixed_script': formatted_script})

if __name__ == '__main__':
    app.run(debug=False)